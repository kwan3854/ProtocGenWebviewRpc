// AUTO-GENERATED by protoc-gen-webviewrpc
// (C) "Client" side: {{.ServiceName}}Client

// 이 부분에서, 각 메서드가 필요로 하는 decode/encode를 import
// 예: "import { encodeHelloRequest, decodeHelloResponse } from './hello_world.js';"
// Get encoding/decoding functions for each method
// e.g. "import { encodeHelloRequest, decodeHelloResponse } from './hello_world.js';"
import { {{range .Methods}}encode{{.InputType}}, decode{{.OutputType}},{{end}} } from './{{.ServiceName}}.js';

export class {{.ServiceName}}Client {
  /**
   * @param {WebViewRpcClient} rpcClient
   */
  constructor(rpcClient) {
    this.rpcClient = rpcClient;
  }

  {{range .Methods}}
  /**
   * async {{.MethodName}}
   * @param { {{.InputType}} } requestObj
   * @returns {Promise< {{.OutputType}} >}
   */
  async {{.MethodName}}(requestObj) {
    // 1) encode requestObj => Uint8Array
    const reqBytes = encode{{.InputType}}(requestObj);
    // 2) callMethod => Promise<Uint8Array>
    const respBytes = await this.rpcClient.callMethod("{{$.ServiceName}}.{{.MethodName}}", reqBytes);
    // 3) decode => responseObj
    const respObj = decode{{.OutputType}}(respBytes);
    return respObj;
  }
  {{end}}
}
